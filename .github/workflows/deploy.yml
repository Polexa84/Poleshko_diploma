name: Django CI/CD Pipeline

on:
  push:
    branches:
      - develop_1

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password  # Должно совпадать с POSTGRES_PASSWORD в env
          POSTGRES_DB: testdb
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Create static directory
      run: mkdir -p static

    - name: Install dependencies
      run: |
        sudo apt-get install -y libpq-dev
        pip install -r requirements.txt psycopg2-binary

    - name: Wait for PostgreSQL
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U postgres -d testdb; then
            exit 0
          fi
          sleep 2
        done
        exit 1

    - name: Run migrations
      run: python manage.py migrate --noinput
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: testdb
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

    - name: Run tests
      run: python manage.py test --noinput

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Add server host key to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Copy project files to server
      run: |
        echo "Copying project files to server..."
        export RSYNC_RSH="ssh -o StrictHostKeyChecking=no"
        rsync -avz --delete \
          --exclude '__pycache__' \
          --exclude '.env*' \
          --exclude '.git' \
          --exclude 'venv' \
          . ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR }}
        echo "Files copied."

    - name: Install dependencies and deploy
      run: |
        echo "Executing deployment commands on server..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'DEPLOY'
        set -e
        set -x
        echo "Changing to project directory..."
        cd ${{ secrets.DEPLOY_DIR }}

        echo "Setting up virtual environment..."
        if [ ! -d "venv" ]; then
          python3 -m venv venv
        fi

        echo "Activating virtual environment..."
        source venv/bin/activate

        echo "Installing dependencies..."
        pip install --upgrade pip
        pip install -r requirements.txt psycopg2-binary

        echo "Setting environment variables..."
        export DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}"
        export POSTGRES_USER="postgres"
        export POSTGRES_PASSWORD="password"
        export POSTGRES_DB="testdb"

        echo "Applying migrations..."
        python manage.py migrate

        echo "Collecting static files..."
        python manage.py collectstatic --noinput
        echo "Deployment tasks completed successfully."
        DEPLOY

    - name: Restart services
      run: |
        echo "Restarting application services..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'RESTART'
        set -e
        set -x
        sudo systemctl restart gunicorn
        sudo systemctl reload nginx
        echo "Services restarted successfully."
        RESTART
